// <auto-generated />
using System;
using HotelBooking.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBooking.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250817102150_AddReservationToDB")]
    partial class AddReservationToDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelBooking.Models.Customer", b =>
                {
                    b.Property<int>("Cust_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cust_Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Full_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID_Image_URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mariage_cert_URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Marriage_status")
                        .HasColumnType("bit");

                    b.Property<string>("National_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone_Number")
                        .HasColumnType("int");

                    b.HasKey("Cust_Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Cust_Id = 1,
                            Email = "john@gmail.com",
                            Full_Name = "John El Ahmady",
                            ID_Image_URL = "",
                            Mariage_cert_URL = "",
                            Marriage_status = false,
                            National_ID = "101050607845",
                            Nationality = "Egypt",
                            Phone_Number = 1022289755
                        },
                        new
                        {
                            Cust_Id = 2,
                            Email = "sarah.mostafa@gmail.com",
                            Full_Name = "Sarah Mostafa",
                            ID_Image_URL = "",
                            Mariage_cert_URL = "",
                            Marriage_status = true,
                            National_ID = "298030512345",
                            Nationality = "Egypt",
                            Phone_Number = 1015673248
                        },
                        new
                        {
                            Cust_Id = 3,
                            Email = "omar.khaled@yahoo.com",
                            Full_Name = "Omar Khaled",
                            ID_Image_URL = "",
                            Mariage_cert_URL = "",
                            Marriage_status = false,
                            National_ID = "300070923456",
                            Nationality = "Brazil",
                            Phone_Number = 1098765432
                        },
                        new
                        {
                            Cust_Id = 4,
                            Email = "nour.hassan@hotmail.com",
                            Full_Name = "Nour El Din Hassan",
                            ID_Image_URL = "",
                            Mariage_cert_URL = "",
                            Marriage_status = true,
                            National_ID = "295112245678",
                            Nationality = "Brazil",
                            Phone_Number = 1122334455
                        },
                        new
                        {
                            Cust_Id = 5,
                            Email = "mona.adel@gmail.com",
                            Full_Name = "Mona Adel",
                            ID_Image_URL = "",
                            Mariage_cert_URL = "",
                            Marriage_status = false,
                            National_ID = "301022334567",
                            Nationality = "Brazil",
                            Phone_Number = 1033445566
                        },
                        new
                        {
                            Cust_Id = 6,
                            Email = "ahmed.samir@outlook.com",
                            Full_Name = "Ahmed Samir",
                            ID_Image_URL = "",
                            Mariage_cert_URL = "",
                            Marriage_status = true,
                            National_ID = "299041556789",
                            Nationality = "Brazil",
                            Phone_Number = 1255667788
                        });
                });

            modelBuilder.Entity("HotelBooking.Models.Reservation", b =>
                {
                    b.Property<int>("Reservation_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Reservation_Id"));

                    b.Property<DateOnly>("Check_In")
                        .HasColumnType("date");

                    b.Property<DateOnly>("Check_Out")
                        .HasColumnType("date");

                    b.Property<int>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<int>("Room_Id")
                        .HasColumnType("int");

                    b.HasKey("Reservation_Id");

                    b.HasIndex("Customer_Id");

                    b.HasIndex("Room_Id");

                    b.ToTable("Reservation");

                    b.HasData(
                        new
                        {
                            Reservation_Id = 1,
                            Check_In = new DateOnly(2025, 8, 20),
                            Check_Out = new DateOnly(2025, 8, 25),
                            Customer_Id = 1,
                            Room_Id = 1
                        },
                        new
                        {
                            Reservation_Id = 2,
                            Check_In = new DateOnly(2025, 9, 1),
                            Check_Out = new DateOnly(2025, 9, 5),
                            Customer_Id = 2,
                            Room_Id = 2
                        },
                        new
                        {
                            Reservation_Id = 3,
                            Check_In = new DateOnly(2025, 9, 10),
                            Check_Out = new DateOnly(2025, 9, 15),
                            Customer_Id = 3,
                            Room_Id = 3
                        },
                        new
                        {
                            Reservation_Id = 4,
                            Check_In = new DateOnly(2025, 9, 20),
                            Check_Out = new DateOnly(2025, 9, 22),
                            Customer_Id = 4,
                            Room_Id = 4
                        },
                        new
                        {
                            Reservation_Id = 5,
                            Check_In = new DateOnly(2025, 10, 1),
                            Check_Out = new DateOnly(2025, 10, 7),
                            Customer_Id = 5,
                            Room_Id = 5
                        },
                        new
                        {
                            Reservation_Id = 6,
                            Check_In = new DateOnly(2025, 10, 10),
                            Check_Out = new DateOnly(2025, 10, 12),
                            Customer_Id = 6,
                            Room_Id = 6
                        });
                });

            modelBuilder.Entity("HotelBooking.Models.Room", b =>
                {
                    b.Property<int>("Room_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Room_Id"));

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<bool>("Reservation_status")
                        .HasColumnType("bit");

                    b.Property<string>("Room_Num")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Room_Id");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            Room_Id = 1,
                            Floor = 1,
                            Price = 500.0,
                            Reservation_status = false,
                            Room_Num = "101",
                            Type = "Single"
                        },
                        new
                        {
                            Room_Id = 2,
                            Floor = 1,
                            Price = 800.0,
                            Reservation_status = false,
                            Room_Num = "102",
                            Type = "Double"
                        },
                        new
                        {
                            Room_Id = 3,
                            Floor = 1,
                            Price = 1500.0,
                            Reservation_status = false,
                            Room_Num = "103",
                            Type = "Suite"
                        },
                        new
                        {
                            Room_Id = 4,
                            Floor = 2,
                            Price = 550.0,
                            Reservation_status = false,
                            Room_Num = "201",
                            Type = "Single"
                        },
                        new
                        {
                            Room_Id = 5,
                            Floor = 2,
                            Price = 900.0,
                            Reservation_status = false,
                            Room_Num = "202",
                            Type = "Double"
                        },
                        new
                        {
                            Room_Id = 6,
                            Floor = 3,
                            Price = 1200.0,
                            Reservation_status = false,
                            Room_Num = "301",
                            Type = "Deluxe"
                        },
                        new
                        {
                            Room_Id = 7,
                            Floor = 3,
                            Price = 1700.0,
                            Reservation_status = false,
                            Room_Num = "302",
                            Type = "Suite"
                        });
                });

            modelBuilder.Entity("HotelBooking.Models.Reservation", b =>
                {
                    b.HasOne("HotelBooking.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBooking.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("Room_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
