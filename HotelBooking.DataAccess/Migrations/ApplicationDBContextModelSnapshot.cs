// <auto-generated />
using System;
using HotelBooking.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBooking.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelBooking.Models.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificationAttachment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMarried")
                        .HasColumnType("bit");

                    b.Property<string>("MarriageCertificateAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarriageCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarriedToCustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Address = "Cairo, Egypt",
                            BirthDate = new DateOnly(1995, 3, 12),
                            Email = "john.ahmady@gmail.com",
                            IdentificationAttachment = "id1.jpg",
                            IdentificationNumber = "30105060784512",
                            IdentificationType = "National ID",
                            IsMarried = true,
                            MarriageCertificateAttachment = "mc1.pdf",
                            MarriageCertificateNumber = "MC123456",
                            MarriedToCustomerId = "2",
                            Name = "John El Ahmady",
                            Nationality = "Egyptian",
                            PhoneNumber = "01022289755"
                        },
                        new
                        {
                            Id = "2",
                            Address = "Giza, Egypt",
                            BirthDate = new DateOnly(1997, 7, 21),
                            Email = "sara.mahmoud@gmail.com",
                            IdentificationAttachment = "passport2.jpg",
                            IdentificationNumber = "A23456789",
                            IdentificationType = "Passport",
                            IsMarried = true,
                            MarriageCertificateAttachment = "mc1.pdf",
                            MarriageCertificateNumber = "MC123456",
                            MarriedToCustomerId = "1",
                            Name = "Sara Mahmoud",
                            Nationality = "Egyptian",
                            PhoneNumber = "01144556677"
                        },
                        new
                        {
                            Id = "3",
                            Address = "New York, USA",
                            BirthDate = new DateOnly(1990, 11, 4),
                            Email = "m.smith@example.com",
                            IdentificationAttachment = "passport3.png",
                            IdentificationNumber = "X98765432",
                            IdentificationType = "Passport",
                            IsMarried = false,
                            Name = "Michael Smith",
                            Nationality = "American",
                            PhoneNumber = "+1-202-555-0188"
                        },
                        new
                        {
                            Id = "4",
                            Address = "Alexandria, Egypt",
                            BirthDate = new DateOnly(1998, 1, 1),
                            Email = "fatima.ali@example.com",
                            IdentificationAttachment = "id4.png",
                            IdentificationNumber = "29801011234567",
                            IdentificationType = "National ID",
                            IsMarried = false,
                            Name = "Fatima Ali",
                            Nationality = "Egyptian",
                            PhoneNumber = "01234567890"
                        },
                        new
                        {
                            Id = "5",
                            Address = "London, UK",
                            BirthDate = new DateOnly(1988, 5, 30),
                            Email = "david.johnson@example.co.uk",
                            IdentificationAttachment = "dl5.pdf",
                            IdentificationNumber = "DLUK998877",
                            IdentificationType = "Driver License",
                            IsMarried = true,
                            MarriageCertificateAttachment = "mc5.pdf",
                            MarriageCertificateNumber = "UKMC554433",
                            Name = "David Johnson",
                            Nationality = "British",
                            PhoneNumber = "+44-7700-900123"
                        });
                });

            modelBuilder.Entity("HotelBooking.Models.Models.Reservation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfAdults")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfExtraBeds")
                        .HasColumnType("int");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("HotelBooking.Models.RoomModels.DoubleRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DoubleRooms");
                });

            modelBuilder.Entity("HotelBooking.Models.RoomModels.SingleRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SingleRooms");
                });

            modelBuilder.Entity("HotelBooking.Models.RoomModels.Suite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suites");
                });
#pragma warning restore 612, 618
        }
    }
}
